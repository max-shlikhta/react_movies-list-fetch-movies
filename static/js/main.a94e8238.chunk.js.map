{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","App.tsx","index.tsx"],"names":["MovieCard","React","memo","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","addOnPage","useState","title","setTitle","foundedMovie","setFoundedMovie","isLoaded","setIsLoaded","hasError","setHasError","htmlFor","type","id","placeholder","cn","value","onChange","event","target","trimStart","onClick","fetch","then","response","json","Error","status","statusText","request","catch","disabled","length","preventDefault","App","setMovies","addMovie","useCallback","some","movieOnPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a94e8238.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const MovieCard: React.FC<Props> = React.memo(\n  ({ movie }) => {\n    return (\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={movie.Poster}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"images/imdb-logo.jpeg\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-8\">{movie.Title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            {movie.Plot}\n            <br />\n          </div>\n        </div>\n      </div>\n    );\n  },\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = React.memo(\n  ({ movies }) => {\n    return (\n      <div className=\"movies\">\n        {movies.map(movie => (\n          <MovieCard\n            key={movie.imdbID}\n            movie={movie}\n          />\n        ))}\n      </div>\n    );\n  },\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/api';\n\ninterface Props {\n  addOnPage: (movie: Movie) => void,\n}\n\nexport const FindMovie: React.FC<Props> = React.memo(\n  ({ addOnPage }) => {\n    const [title, setTitle] = useState('');\n    const [foundedMovie, setFoundedMovie] = useState<Movie | null>(null);\n\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [hasError, setHasError] = useState(false);\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setTitle(event.target.value.trimStart());\n\n      setHasError(false);\n      setIsLoaded(false);\n    };\n\n    const findMovie = () => {\n      setIsLoaded(true);\n      setHasError(false);\n      setFoundedMovie(null);\n\n      request(title)\n        .then((movie) => {\n          setIsLoaded(false);\n\n          if (!movie) {\n            setHasError(true);\n            setFoundedMovie(null);\n          } else {\n            setFoundedMovie(movie);\n          }\n        })\n        .catch(() => setHasError(true));\n    };\n\n    const handleSubmit = (\n      event: React.MouseEvent<HTMLButtonElement>\n      | React.FormEvent<HTMLFormElement>,\n    ) => {\n      event.preventDefault();\n\n      if (foundedMovie) {\n        addOnPage(foundedMovie);\n\n        setTitle('');\n        setFoundedMovie(null);\n        setHasError(false);\n        setIsLoaded(false);\n      }\n    };\n\n    return (\n      <>\n        <form className=\"find-movie\">\n          <div className=\"field\">\n            <label\n              className=\"label\"\n              htmlFor=\"movie-title\"\n            >\n              Movie title\n              <div className=\"control\">\n                <input\n                  type=\"text\"\n                  id=\"movie-title\"\n                  placeholder=\"Enter a title to search\"\n                  className={cn(\n                    'input',\n                    { 'is-danger': hasError },\n                  )}\n                  value={title}\n                  onChange={handleChange}\n                />\n              </div>\n            </label>\n\n            {hasError && (\n              <p className=\" help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n          </div>\n\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <button\n                type=\"button\"\n                className=\"button is-light\"\n                onClick={findMovie}\n                disabled={title.length < 1}\n              >\n                Find a movie\n              </button>\n            </div>\n\n            <div className=\"control\">\n              <button\n                type=\"submit\"\n                className=\"button is-primary\"\n                onClick={handleSubmit}\n                disabled={!foundedMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          </div>\n        </form>\n\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n\n          {foundedMovie\n            && (\n              <MovieCard movie={foundedMovie} />\n            )}\n\n          {isLoaded && !hasError\n            && (\n              <div className=\"lds-roller\">\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n              </div>\n            )}\n        </div>\n      </>\n    );\n  },\n);\n","const API_URL = 'https://www.omdbapi.com/?apikey=1ed3d21c&t=';\n\nexport const request = (title: string): Promise<Movie> => {\n  return fetch(`${API_URL}${title}`)\n    .then(response => response.json())\n    .then(response => {\n      if (response.Error) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response;\n    });\n};\n","import React, { useState, useCallback } from 'react';\nimport './App.scss';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = React.memo(() => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((movie: Movie) => {\n    if (movies.some(movieOnPage => movieOnPage.imdbID === movie.imdbID)) {\n      return;\n    }\n\n    setMovies([...movies, movie]);\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addOnPage={addMovie} />\n      </div>\n    </div>\n  );\n});\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}